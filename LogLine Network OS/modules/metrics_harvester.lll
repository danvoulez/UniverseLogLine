module metrics_harvester
version: "1.2.0"
use core_schema as core
use node_registry as reg
use timeline_logger as tl

entity Metric
  properties:
    - tenant_id: string
    - node_id: string
    - type: core.MetricType
    - value: float
    - ts: core.datetime

flow harvest_metrics
  frequency: every 15s
  inputs: tenant_id
  outputs: list[Metric]
  steps:
    - let nodes = select reg.Node where tenant_id=tenant_id
    - let out = []
    - for n in nodes:
        let m = pull_stats(n)
        append out += [
          { tenant_id, node_id: n.node_id, type: cpu, value: m.cpu, ts: now() },
          { tenant_id, node_id: n.node_id, type: ram, value: m.ram, ts: now() },
          { tenant_id, node_id: n.node_id, type: disk, value: m.disk, ts: now() },
          { tenant_id, node_id: n.node_id, type: network, value: m.network, ts: now() },
          { tenant_id, node_id: n.node_id, type: energy, value: m.energy, ts: now() }
        ]
    - tl.log_metrics(tenant_id, out)
    - return out
