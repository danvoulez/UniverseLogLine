module onboarding_plugplay
version: "1.0.0"

use core_schema as core
use id_orchestration as idm
use node_registry as reg
use edge_connectivity as edge
use magnetic_field as mag
use quota_policies as qp
use sla_manager as sla
use enzyme_runtime as ez
use enzyme_bindings as ezb
use timeline_logger as tl

use device_probe as probe
use token_minter as mint
use qr_issuer as qr
use installer_bootstrap as boot
use posture_checks as posture
use tenant_seeding as seed
use rollback_recovery as rr

# Kit para um novo tenant ou loja — gera token + QR e semeia defaults
flow issue_onboarding_kit
  inputs: display_name, primary_color
  outputs: { tenant_id: string, onboarding_token: string, qr_png: bytes }
  steps:
    - let t = seed.ensure_tenant(display_name, primary_color) -> tenant_id
    - let tok = mint.mint_onboarding_token(tenant_id, "15m")
    - let code = qr.issue_qr({ tenant_id, token: tok })
    - seed.apply_defaults(tenant_id)
    - tl.log_event(tenant_id, "onboarding.kit.issued", { token_ttl: "15m" })
    - return { tenant_id: t, onboarding_token: tok, qr_png: code }

# Quickstart para Mac (também funciona em Linux com variações)
flow quickstart_node_mac
  inputs: tenant_id, token, device_hint?
  outputs: { node_id: string }
  steps:
    - mint.validate_token(tenant_id, token)
    - let hw = probe.collect_hardware()
    - let id = idm.identity_bootstrap(tenant_id, { type: mac, ssh_key: hw.ssh_pub, tags: hw.tags })
    - let node = reg.register_node(tenant_id, id.id, {
        label: hw.label, hostname: hw.hostname, ip: hw.ip, mac: hw.mac,
        ram_gb: hw.ram_gb, cores: hw.cpu_cores, disk_gb: hw.disk_gb, os: macos,
        net_score: hw.net_score, gpu_count: hw.gpu_count
      })
    - edge.establish_link(tenant_id, node.node_id, node.node_id, wireguard)
    - posture.minimal_security(tenant_id, node.node_id)
    - mag.autoplace_if_domain_known(tenant_id, node.node_id, device_hint)
    - boot.install_launch_agent(node.node_id)
    - tl.log_event(tenant_id, "onboarding.node.ready", { node_id: node.node_id })
    - return { node_id: node.node_id }

# Onboarding “em massa” — QR por estação, auto-provisiona cada nó ao escanear
flow kiosk_onboarding
  inputs: tenant_id, station_label, count
  outputs: list[{node_id: string}]
  steps:
    - let results = []
    - loop i in 1..count:
        let tok = mint.mint_onboarding_token(tenant_id, "10m")
        qr.display_on_kiosk(station_label, { tenant_id, token: tok })
        # cada dispositivo chama quickstart_node_mac com o token ao escanear
        append results += await event "node.onboarded" within "10m"
    - return results

# Verificação pós-instalação (SLA mínimo)
flow post_install_check
  inputs: tenant_id, node_id
  outputs: { ok: bool, issues: list[string] }
  steps:
    - let issues = posture.deep_posture_scan(tenant_id, node_id)
    - if length(issues) == 0 then tl.log_event(tenant_id, "onboarding.post_ok", { node_id })
      else tl.log_event(tenant_id, "onboarding.post_warn", { node_id, issues })
    - return { ok: length(issues) == 0, issues }
