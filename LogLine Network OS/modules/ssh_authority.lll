module ssh_authority
version: "1.1.0"
use id_orchestration as idmod
use node_registry as reg

entity SshEntry
  key: entry_id (uuid)
  properties:
    - tenant_id: string
    - entry_id: uuid
    - logline_id: idmod.LogLineID
    - ssh_key: string
    - alias: string
    - authorized_on: list[string]  # reg.Node.node_id
    - created_at: datetime

flow authorize_ssh
  inputs: tenant_id, logline_id, target_node
  outputs: SshEntry
  steps:
    - ensure exists reg.Node where tenant_id=tenant_id and node_id=target_node
    - let id = select idmod.LogLineID where id=logline_id and tenant_id=tenant_id
    - require id.passkey valid else raise "passkey_invalid"
    - let entry = upsert SshEntry { tenant_id, entry_id: uuid(), logline_id, ssh_key: coalesce(id.ssh_key, ""), alias: "ll-"+substr(logline_id.id,0,6), authorized_on: append([], target_node), created_at: now() }
    - push_ssh_key(target_node, entry.ssh_key)
    - emit span "ssh.authorized" attrs { tenant_id, target_node, alias: entry.alias }
