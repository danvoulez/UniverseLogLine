module edge_connectivity
version: "1.3.0"
use core_schema as core
use node_registry as reg

entity Link
  key: link_id (uuid)
  properties:
    - tenant_id: string
    - link_id: uuid
    - from_node: string
    - to_node: string
    - protocol: core.NetProto
    - latency_ms: float
    - throughput_mbps: float
    - secure: bool
    - created_at: core.datetime

flow establish_link
  inputs: tenant_id, from_node, to_node, protocol
  outputs: Link
  steps:
    - ensure exists reg.Node where tenant_id=tenant_id and node_id in [from_node, to_node]
    - run handshake(protocol) -> { ok, secure, latency_ms, throughput_mbps }
    - require ok else raise "handshake_failed"
    - create Link { tenant_id, link_id: uuid(), from_node, to_node, protocol, latency_ms, throughput_mbps, secure, created_at: now() }
    - emit span "link.established" attrs { tenant_id, from_node, to_node, protocol, latency_ms }
