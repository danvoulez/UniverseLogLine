module enzyme_runtime
version: "1.0.0"
use core_schema as core

entity Enzyme
  key: enzyme_id (string)
  properties:
    - enzyme_id: string        # ex: "polymerase", "chaperone", "catalase", "lorentz_bias"
    - version: string
    - triggers: list[string]   # eventos: "contract.queued", "span.started", "incident.opened"
    - affinity: list[string]   # workflows, labels
    - inhibitor_labels: list[string] = []
    - params: json
    - enabled: bool = true

flow register_enzyme
  inputs: enzyme (Enzyme)
  outputs: Enzyme
  steps:
    - upsert Enzyme enzyme
    - emit span "enzyme.registered" attrs enzyme

flow run_enzymes_for_event
  inputs: event_kind, payload
  steps:
    - let ez = select Enzyme where enabled==true and triggers contains event_kind
    - for e in ez: call enzyme_catalog.apply(e.enzyme_id, e.params, payload)
