module tenant_seeding
version: "1.0.0"

use core_schema as core
use tenant_manager as tm
use quota_policies as qp
use sla_manager as sla
use enzyme_bindings as ezb
use magnetic_field as mag
use timeline_logger as tl

flow ensure_tenant
  inputs: display_name, primary_color
  outputs: string   # tenant_id
  steps:
    - let id = slug(display_name)
    - if not exists core.Tenant where tenant_id=id:
        tm.create_tenant(display_name, primary_color) -> t
        return t.tenant_id
      else return id

flow apply_defaults
  inputs: tenant_id
  steps:
    - if not exists qp.Quota where tenant_id=tenant_id:
        create qp.Quota { tenant_id, quota_id: uuid(), cpu_cores_max: 64, ram_gb_max: 512, disk_gb_max: 4096, gpu_max: 8 }
    - if not exists sla.SLO where tenant_id=tenant_id and name="success_rate":
        create sla.SLO { tenant_id, slo_id: uuid(), name: "success_rate", target: 0.99, window: "30d", metric: "contract.success_rate" }
    - if not exists mag.MagneticDomain where tenant_id=tenant_id:
        create mag.MagneticDomain { tenant_id, domain_id:"default", origin:(0,0,0), coil_max_mT: 18, damping: 0.7 }
    - # enzimas padrão já vêm do enzyme_bindings.init
    - tl.log_event(tenant_id, "tenant.defaults.applied", {})
