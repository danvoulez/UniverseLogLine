module observability_mesh
version: "1.0.0"

use core_schema as core
use timeline_logger as tl

entity TraceSpan
  key: span_id (uuid)
  properties:
    - tenant_id: string
    - trace_id: uuid
    - span_id: uuid
    - parent_span: uuid?
    - node_id: string
    - operation: string
    - duration_ms: float
    - tags: map[string, any]
    - started_at: core.datetime
    - finished_at: core.datetime?

flow distributed_trace
  inputs: tenant_id, root_operation
  outputs: trace_tree
  steps:
    - let trace_id = uuid()
    - inject_trace_context(trace_id, root_operation)
    - let spans = collect_spans(trace_id, window="10s")
    - let tree = correlate_causality(spans)
    - tl.log_event(tenant_id, "trace.completed", { trace_id, spans: length(spans) })
    - return tree
